@page "/customers"
@attribute [Authorize]
@inject ICustomerService CustomerService
@inject ILocalStorageService LocalStorageService

<div class="container">

<div class="card mt-4">
    <h4 class="card-header">Customers in this company</h4>
    <div class="card-body">
        @if (loading)
        {
            <div class="spinner-border spinner-border-sm"></div>
        }
        @if (customers != null)
        {

                @foreach (var item in customers)
                {
                    
                    <div class="card mt-4" style="margin:8px">
                    <div>
                        <div style="float:left; margin:15px">
                            <h5>Customer Name: @item.Name</h5>
                        </div>
                        @if (auth.RoleType == RoleType.Manager)
                        {
                        <div style="float:right; padding:20px">
                            <button style="margin:10px" class="btn btn-danger" @onclick="() => DeleteCompany(item.Id)">
                                @if (loading)
                                {
                            <span class="spinner-border spinner-border-sm mr-1"></span>}Delete
                            </button>
                            <a style="margin:10px" class="btn btn-primary" href='/employees/@item.Id'>Edit</a>
                        </div>
                        }
                        
                    </div>
                </div>

                }

        }
    </div>
</div>
</div>

@code {
    private bool loading;
    private IEnumerable<Customer> customers;
    private Auth auth;

    protected override async Task OnInitializedAsync()
    {
        auth = await LocalStorageService.GetItem<Auth>("auth");
        loading = true;
        customers = await CustomerService.GetAll();
        loading = false;
    }

    private void DeleteCompany(int id)
    {

    }
}